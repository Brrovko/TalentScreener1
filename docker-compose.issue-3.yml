version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: skillchecker:latest
    restart: unless-stopped
    ports:
      - "15005:5005"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/skillchecker
      - SESSION_SECRET=your-secure-session-secret-key
    volumes:
      - ./:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=1 --spider http://127.0.0.1:5005 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - skillchecker-network

  db:
    image: postgres:17.4
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=skillchecker
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - skillchecker-network

  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    image: skillchecker:latest
    environment:
      - NODE_ENV=test
    networks:
      - skillchecker-network

volumes:
  postgres-data:

networks:
  skillchecker-network:
    driver: bridge
