version: '3.8'

services:
  app:
    image: ${APP_IMAGE:-ghcr.io/username/skillchecker:latest}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5005:5005"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/skillchecker
      # Add other environment variables as needed
      # - NEON_DATABASE_URL=${NEON_DATABASE_URL}
    volumes:
      - app-data:/app/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5005/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - skillchecker-network
    deploy:
      rollback_config:
        parallelism: 0
        order: stop-first

  postgres:
    image: postgres:14
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=skillchecker
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - skillchecker-network

volumes:
  app-data:
  postgres-data:

networks:
  skillchecker-network:
    driver: bridge
